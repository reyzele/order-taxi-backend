{"version":3,"sources":["components/MapBox/MapBox.module.css","modules/Auth/actions.js","modules/Auth/reducer.js","modules/Auth/selectors.js","config/api.js","modules/Auth/sagas.js","modules/Auth/localStorageSagas.js","modules/Addresses/actions.js","modules/Addresses/reducer.js","modules/Addresses/selectors.js","modules/Addresses/sagas.js","modules/Coords/actions.js","modules/Coords/reducer.js","modules/Coords/selectors.js","modules/Coords/sagas.js","modules/index.js","store/index.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","config/helpers.js","components/LoginForm/LoginForm.js","components/OrderForm/OrderForm.js","components/ProfileAlert/ProfileAlert.js","components/OrderAlert/OrderAlert.js","components/OrderPage/OrderPage.js","components/MapBox/MapBox.js","components/ProfileForm/ProfileForm.js","components/RootRouter/RootRouter.js","index.js"],"names":["module","exports","login","createAction","logout","auth","handleProfileSubmit","handleProfileClear","isLoggedIn","handleActions","profile","_","action","payload","combineReducers","getIsLoggedIn","state","getProfile","getIsProfileFilled","Object","keys","length","checkAuth","a","username","password","axios","get","trim","method","mode","response","loadAddressList","then","loadCoords","address1","address2","authPostWorker","authWorker","authWatcher","call","result","error","message","put","startSubmit","data","stopSubmit","userName","userPassword","_error","success","takeLeading","toString","saveProfileWatcher","clearProfileWatcher","logoutWatcher","loginWatcher","localStorageSaga","saveProfileWorker","localStorage","JSON","stringify","parse","clearProfileWorker","logoutWorker","loginWorker","takeEvery","spawn","fetchAddressesRequest","fetchAddressesSuccess","fetchAddressesFailure","myAddresses","_state","isLoadingAddresses","errorText","getIsLoadingAddresses","addresses","getLoadErrorText","getMyAddresses","addressesWorker","addressesWatcher","fetchCoordsRequest","fetchCoordsSuccess","fetchCoordsFailure","setIsOrderMade","coords","isLoadingCoords","isOrderMade","getIsLoadingCoords","getCoordsError","getCoords","getIsOrderMade","coordsWorker","coordsWatcher","rootSaga","form","getInitialState","undefined","createAppStore","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","noop","run","Header","handleLogout","props","this","AppBar","position","color","Toolbar","Typography","variant","style","flexGrow","Button","component","Link","to","onClick","PureComponent","mapDispatchToProps","connect","Component","rest","render","renderTextField","type","label","name","input","placeholder","meta","touched","invalid","custom","TextField","margin","helperText","LoginForm","renderInputs","classes","Grid","item","xs","className","alignLeft","fieldAlign","Field","fullWidth","renderForm","handleSubmit","isSubmitting","container","spacing","alignItems","justify","sm","md","Paper","onSubmit","alignCenter","loader","CircularProgress","values","WrappedLoginForm","withStyles","theme","width","height","display","flexDirection","justifyContent","padding","reduxForm","validate","errors","test","OrderForm","handleChange","target","value","setState","handleButtonClick","MyAddresses","id","select","onChange","MenuItem","map","address","key","disabled","WrappedOrderForm","header","body","btnText","linkTo","OrderAlert","handleClick","errorCoords","WrappedOrderAlert","WrappedOrderPage","isProfile","maxWidth","zIndex","top","MapBox","mapContainer","React","createRef","renderRoute","orderCoords","addLayer","source","properties","geometry","coordinates","paint","flyTo","center","mapboxgl","accessToken","Map","current","zoom","prevProps","getLayer","removeLayer","removeSource","remove","styles","ref","cardNameFormatter","replace","cardNumberFormatter","onlyNum","substring","match","join","cardNumberParser","expDateFormatter","month","year","cvvFormatter","ProfileForm","isUpdated","requiredFields","handleClear","change","forEach","field","required","format","InputLabelProps","shrink","renderAlert","WrappedProfileForm","initialValues","formcolumn","Date","now","RootRouter","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef00da5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MapBox_container__2nJsC\"};","import { createAction } from \"redux-actions\";\r\n\r\nexport const login = createAction(\"LOGIN\");\r\nexport const logout = createAction(\"LOGOUT\");\r\nexport const auth = createAction(\"AUTH\");\r\n\r\nexport const handleProfileSubmit = createAction(\"HANDLE_PROFILE_SUBMIT\");\r\nexport const handleProfileClear = createAction(\"HANDLE_PROFILE_CLEAR\");\r\n","import { combineReducers } from \"redux\";\r\nimport { handleActions } from \"redux-actions\";\r\nimport {\r\n  login,\r\n  logout,\r\n  handleProfileSubmit,\r\n  handleProfileClear\r\n} from \"./actions\";\r\n\r\nconst isLoggedIn = handleActions(\r\n  {\r\n    [login]: () => true,\r\n    [logout]: () => false\r\n  },\r\n  false\r\n);\r\n\r\nconst profile = handleActions(\r\n  {\r\n    [handleProfileSubmit]: (_, action) => action.payload,\r\n    [handleProfileClear]: () => ({})\r\n  },\r\n  {}\r\n);\r\n\r\nexport default combineReducers({\r\n  isLoggedIn,\r\n  profile\r\n});\r\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getProfile = state => state.auth.profile;\r\nexport const getIsProfileFilled = state =>\r\n  Object.keys(state.auth.profile).length > 0;\r\n","//import { http } from \"./instance\";\r\nimport axios from \"axios\";\r\n\r\nexport const checkAuth = async ({ username, password }) => {\r\n  const response = await axios.get(\r\n    `https://order-taxi-app.glitch.me/auth?username=${username.trim()}&password=${password.trim()}`,\r\n    {\r\n      method: \"GET\",\r\n      mode: \"cors\"\r\n    }\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\nexport const loadAddressList = () => {\r\n  return axios\r\n    .get(\"https://order-taxi-app.glitch.me/addressList\", {\r\n      method: \"GET\",\r\n      mode: \"cors\"\r\n    })\r\n    .then(response => response);\r\n};\r\n\r\nexport const loadCoords = ({ address1, address2 }) => {\r\n  return axios\r\n    .get(\r\n      `https://order-taxi-app.glitch.me/route?address1=${address1}&address2=${address2}`,\r\n      {\r\n        method: \"GET\",\r\n        mode: \"cors\"\r\n      }\r\n    )\r\n    .then(response => response);\r\n};\r\n","import { startSubmit, stopSubmit } from \"redux-form\";\r\nimport { put, call, takeLeading } from \"redux-saga/effects\";\r\n\r\nimport { login, auth } from \"./actions\";\r\nimport { checkAuth } from \"config/api\";\r\n\r\nexport function* authPostWorker({ payload }) {\r\n  try {\r\n    const result = yield call(checkAuth, payload);\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return { error: error.message };\r\n  }\r\n}\r\n\r\nexport function* authWorker(action) {\r\n  yield put(startSubmit(\"loginform\"));\r\n\r\n  const { error, data } = yield call(authPostWorker, action);\r\n\r\n  if (error) {\r\n    yield put(\r\n      stopSubmit(\"loginform\", {\r\n        userName: \"Ошибка сети\",\r\n        userPassword: \"Ошибка сети\",\r\n        _error: error\r\n      })\r\n    );\r\n  } else if (!data.success) {\r\n    yield put(\r\n      stopSubmit(\"loginform\", {\r\n        userName: \"Неверное имя пользователя или пароль\",\r\n        userPassword: \"Неверное имя пользователя или пароль\",\r\n        _error: data.error\r\n      })\r\n    );\r\n  } else if (data.success) {\r\n    yield put(login());\r\n  }\r\n}\r\n\r\nexport function* authWatcher() {\r\n  yield takeLeading(auth.toString(), authWorker);\r\n}\r\n","import { spawn, takeLeading, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  handleProfileSubmit,\r\n  handleProfileClear,\r\n  logout,\r\n  login\r\n} from \"./actions\";\r\n\r\nfunction saveProfileWorker(action) {\r\n  localStorage.state = JSON.stringify({\r\n    ...JSON.parse(localStorage.state),\r\n    profile: action.payload\r\n  });\r\n}\r\n\r\nfunction clearProfileWorker() {\r\n  localStorage.state = JSON.stringify({\r\n    ...JSON.parse(localStorage.state),\r\n    profile: {}\r\n  });\r\n}\r\n\r\nfunction logoutWorker() {\r\n  const state = localStorage.state && JSON.parse(localStorage.state);\r\n\r\n  localStorage.state = JSON.stringify({\r\n    isLoggedIn: false,\r\n    profile: state ? { ...state.profile } : {}\r\n  });\r\n}\r\n\r\nfunction loginWorker() {\r\n  const state = localStorage.state && JSON.parse(localStorage.state);\r\n\r\n  localStorage.state = JSON.stringify({\r\n    isLoggedIn: true,\r\n    profile: state ? { ...state.profile } : {}\r\n  });\r\n}\r\n\r\nfunction* saveProfileWatcher() {\r\n  yield takeLeading(handleProfileSubmit.toString(), saveProfileWorker);\r\n}\r\n\r\nfunction* clearProfileWatcher() {\r\n  yield takeLeading(handleProfileClear.toString(), clearProfileWorker);\r\n}\r\n\r\nfunction* logoutWatcher() {\r\n  yield takeEvery(logout.toString(), logoutWorker);\r\n}\r\n\r\nfunction* loginWatcher() {\r\n  yield takeEvery(login.toString(), loginWorker);\r\n}\r\n\r\nexport function* localStorageSaga() {\r\n  yield spawn(saveProfileWatcher);\r\n  yield spawn(clearProfileWatcher);\r\n  yield spawn(logoutWatcher);\r\n  yield spawn(loginWatcher);\r\n}\r\n","import { createAction } from \"redux-actions\";\r\n\r\nexport const fetchAddressesRequest = createAction(\"FETCH_ADDRESSES_REQUEST\");\r\nexport const fetchAddressesSuccess = createAction(\"FETCH_ADDRESSES_SUCCESS\");\r\nexport const fetchAddressesFailure = createAction(\"FETCH_ADDRESSES_FAILURE\");\r\n","import { handleActions } from \"redux-actions\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  fetchAddressesRequest,\r\n  fetchAddressesSuccess,\r\n  fetchAddressesFailure\r\n} from \"./actions\";\r\n\r\nconst myAddresses = handleActions(\r\n  {\r\n    [fetchAddressesSuccess]: (_state, action) => action.payload\r\n  },\r\n  []\r\n);\r\n\r\nconst isLoadingAddresses = handleActions(\r\n  {\r\n    [fetchAddressesRequest]: () => true,\r\n    [fetchAddressesSuccess]: () => false,\r\n    [fetchAddressesFailure]: () => false\r\n  },\r\n  null\r\n);\r\n\r\nconst errorText = handleActions(\r\n  {\r\n    [fetchAddressesSuccess]: () => null,\r\n    [fetchAddressesFailure]: () =>\r\n      \"Ошибка загрузки. Проверьте подключение к сети\"\r\n  },\r\n  null\r\n);\r\n\r\nconst error = handleActions(\r\n  {\r\n    [fetchAddressesSuccess]: () => null,\r\n    [fetchAddressesFailure]: (_state, action) => action.payload\r\n  },\r\n  null\r\n);\r\n\r\nexport default combineReducers({\r\n  myAddresses,\r\n  isLoadingAddresses,\r\n  error,\r\n  errorText\r\n});\r\n","export const getIsLoadingAddresses = state =>\r\n  state.addresses.isLoadingAddresses;\r\nexport const getLoadErrorText = state => state.addresses.errorText;\r\nexport const getMyAddresses = state => state.addresses.myAddresses;\r\n","import { put, call, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  fetchAddressesRequest,\r\n  fetchAddressesSuccess,\r\n  fetchAddressesFailure\r\n} from \"./actions\";\r\nimport { loadAddressList } from \"config/api\";\r\n\r\nexport function* addressesWorker() {\r\n  try {\r\n    const { error, data } = yield call(loadAddressList);\r\n    if (!error) yield put(fetchAddressesSuccess(data.addresses));\r\n    if (error) yield put(fetchAddressesFailure(error));\r\n  } catch (error) {\r\n    yield put(fetchAddressesFailure(error));\r\n  }\r\n}\r\n\r\nexport function* addressesWatcher() {\r\n  yield takeEvery(fetchAddressesRequest.toString(), addressesWorker);\r\n}\r\n","import { createAction } from \"redux-actions\";\r\n\r\nexport const fetchCoordsRequest = createAction(\"FETCH_COORDS_REQUEST\");\r\nexport const fetchCoordsSuccess = createAction(\"FETCH_COORDS_SUCCESS\");\r\nexport const fetchCoordsFailure = createAction(\"FETCH_COORDS_FAILURE\");\r\n\r\nexport const setIsOrderMade = createAction(\"SET_IS_ORDER_MADE\");\r\n","import { handleActions } from \"redux-actions\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  fetchCoordsRequest,\r\n  fetchCoordsSuccess,\r\n  fetchCoordsFailure,\r\n  setIsOrderMade\r\n} from \"./actions\";\r\n\r\nconst coords = handleActions(\r\n  {\r\n    [fetchCoordsSuccess]: (_state, action) => action.payload,\r\n    [fetchCoordsFailure]: () => null\r\n  },\r\n  null\r\n);\r\n\r\nconst isLoadingCoords = handleActions(\r\n  {\r\n    [fetchCoordsRequest]: () => true,\r\n    [fetchCoordsSuccess]: () => false,\r\n    [fetchCoordsFailure]: () => false\r\n  },\r\n  false\r\n);\r\n\r\nconst isOrderMade = handleActions(\r\n  {\r\n    [setIsOrderMade]: (_state, action) => action.payload\r\n  },\r\n  false\r\n);\r\n\r\nconst error = handleActions(\r\n  {\r\n    [fetchCoordsSuccess]: () => null,\r\n    [fetchCoordsFailure]: (_state, action) => action.payload\r\n  },\r\n  null\r\n);\r\n\r\nexport default combineReducers({\r\n  coords,\r\n  isLoadingCoords,\r\n  isOrderMade,\r\n  error\r\n});\r\n","export const getIsLoadingCoords = state => state.coords.isLoadingCoords;\r\nexport const getCoordsError = state => state.coords.error;\r\nexport const getCoords = state => state.coords.coords;\r\nexport const getIsOrderMade = state => state.coords.isOrderMade;\r\n","import { put, call, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  fetchCoordsRequest,\r\n  fetchCoordsSuccess,\r\n  fetchCoordsFailure\r\n} from \"./actions\";\r\nimport { loadCoords } from \"config/api\";\r\n\r\nexport function* coordsWorker(action) {\r\n  try {\r\n    const { error, data } = yield call(loadCoords, action.payload);\r\n    if (!error) yield put(fetchCoordsSuccess(data));\r\n    if (error) yield put(fetchCoordsFailure(error));\r\n  } catch (error) {\r\n    yield put(fetchCoordsFailure(error));\r\n  }\r\n}\r\n\r\nexport function* coordsWatcher() {\r\n  yield takeEvery(fetchCoordsRequest.toString(), coordsWorker);\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { spawn } from \"redux-saga/effects\";\r\n\r\nimport { reducer as form } from \"redux-form\";\r\nimport auth, { authWatcher, localStorageSaga } from \"./Auth\";\r\nimport addresses, { addressesWatcher } from \"./Addresses\";\r\nimport coords, { coordsWatcher } from \"./Coords\";\r\n\r\nexport default combineReducers({ auth, addresses, coords, form });\r\n\r\nexport function* rootSaga() {\r\n  yield spawn(authWatcher);\r\n  yield spawn(addressesWatcher);\r\n  yield spawn(coordsWatcher);\r\n  yield spawn(localStorageSaga);\r\n}\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer, { rootSaga } from \"modules\";\r\n\r\nconst getInitialState = () => {\r\n  let { isLoggedIn, profile } = localStorage.state\r\n    ? JSON.parse(localStorage.state)\r\n    : { isLoggedIn: false, profile: {} };\r\n\r\n  if (profile === undefined) profile = {};\r\n  if (isLoggedIn === undefined) isLoggedIn = false;\r\n\r\n  return { isLoggedIn, profile };\r\n};\r\n\r\nconst createAppStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    { auth: { ...getInitialState() } },\r\n    compose(\r\n      applyMiddleware(sagaMiddleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : noop => noop\r\n    )\r\n  );\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n  \r\n  return store;\r\n};\r\n\r\nexport default createAppStore;\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { logout, getIsLoggedIn } from \"modules/Auth\";\r\nimport { setIsOrderMade } from \"modules/Coords\";\r\nclass Header extends PureComponent {\r\n  handleLogout = () => {\r\n    const { logout, setIsOrderMade } = this.props;\r\n    setIsOrderMade(false);\r\n    logout();\r\n  };\r\n\r\n  render() {\r\n    const { isLoggedIn } = this.props;\r\n\r\n    return (\r\n      <AppBar position=\"static\" color=\"inherit\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" style={{ flexGrow: 1 }}>\r\n            Taxi ordering app\r\n          </Typography>\r\n          <Button component={Link} to=\"/map\" color=\"default\">\r\n            Map\r\n          </Button>\r\n          <Button component={Link} to=\"/profile\" color=\"default\">\r\n            Profile\r\n          </Button>\r\n          {isLoggedIn ? (\r\n            <Button\r\n              component={Link}\r\n              to=\"/login\"\r\n              color=\"default\"\r\n              onClick={this.handleLogout}\r\n            >\r\n              Logout\r\n            </Button>\r\n          ) : (\r\n            <Button component={Link} to=\"/login\" color=\"default\">\r\n              Login\r\n            </Button>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoggedIn: getIsLoggedIn(state)\r\n});\r\nconst mapDispatchToProps = { logout, setIsOrderMade };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { getIsLoggedIn } from \"modules/Auth\";\r\n\r\nconst PrivateRoute = props => {\r\n  const { component: Component, isLoggedIn, ...rest } = props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoggedIn: getIsLoggedIn(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(PrivateRoute);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport const renderTextField = ({\r\n  type,\r\n  name,\r\n  label,\r\n  input,\r\n  placeholder,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={placeholder ? placeholder : label}\r\n    margin=\"none\"\r\n    type={type}\r\n    error={touched && error && true}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Field, reduxForm, isSubmitting } from \"redux-form\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { login, auth, getIsLoggedIn } from \"modules/Auth\";\r\nimport { renderTextField } from \"config/helpers\";\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"stretch\",\r\n    padding: theme.spacing(3)\r\n  },\r\n  fieldAlign: {\r\n    display: \"flex\"\r\n  },\r\n  alignLeft: {\r\n    justifyContent: \"flex-start\"\r\n  },\r\n  alignCenter: {\r\n    justifyContent: \"center\"\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: 192\r\n  }\r\n});\r\n\r\nclass LoginForm extends PureComponent {\r\n  renderInputs = () => {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n        >\r\n          <Field\r\n            name=\"userName\"\r\n            component={renderTextField}\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n        >\r\n          <Field\r\n            name=\"userPassword\"\r\n            component={renderTextField}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n      </>\r\n    );\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { classes, handleSubmit, isSubmitting } = this.props;\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        className={classes.container}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <Grid item xs={8} sm={6} md={4}>\r\n          <Paper component=\"form\" onSubmit={handleSubmit(this.handleSubmit)}>\r\n            <Grid container spacing={2} className={classes.form}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className={`${classes.alignCenter} ${classes.fieldAlign}`}\r\n              >\r\n                <Typography variant=\"h4\">Login</Typography>\r\n              </Grid>\r\n              {isSubmitting ? (\r\n                <Grid item xs={12} className={classes.loader}>\r\n                  <CircularProgress />\r\n                </Grid>\r\n              ) : (\r\n                this.renderInputs()\r\n              )}\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  component=\"button\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  handleSubmit = values => {\r\n    const { userName: username, userPassword: password } = values;\r\n    const { auth } = this.props;\r\n\r\n    auth({ username, password });\r\n  };\r\n\r\n  render() {\r\n    const { isLoggedIn } = this.props;\r\n\r\n    return isLoggedIn ? <Redirect to=\"/map\" /> : this.renderForm();\r\n  }\r\n}\r\n\r\nconst loginSyncValidator = values => {\r\n  const errors = {};\r\n  if (!values.userName) {\r\n    errors.userName = \"Please enter your login\";\r\n  } else if (\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.userName)\r\n  ) {\r\n    errors.userName = \"It should be your e-mail\";\r\n  }\r\n  if (!values.userPassword) errors.userPassword = \"Please enter your password\";\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoggedIn: getIsLoggedIn(state),\r\n  isSubmitting: isSubmitting(\"loginform\")(state)\r\n});\r\nconst mapDispatchToProps = { login, auth };\r\n\r\nconst WrappedLoginForm = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  withStyles(styles),\r\n  reduxForm({ form: \"loginform\", validate: loginSyncValidator })\r\n)(LoginForm);\r\n\r\nexport default WrappedLoginForm;\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport {\r\n  fetchCoordsRequest,\r\n  getIsLoadingCoords,\r\n  setIsOrderMade\r\n} from \"modules/Coords\";\r\nimport {\r\n  fetchAddressesRequest,\r\n  getIsLoadingAddresses,\r\n  getLoadErrorText,\r\n  getMyAddresses\r\n} from \"modules/Addresses\";\r\n\r\nconst styles = theme => ({\r\n  fieldAlign: {\r\n    display: \"flex\"\r\n  },\r\n  alignLeft: {\r\n    justifyContent: \"flex-start\"\r\n  },\r\n  alignCenter: {\r\n    justifyContent: \"center\"\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: 192\r\n  }\r\n});\r\n\r\nclass OrderForm extends PureComponent {\r\n  state = {\r\n    address1: \"\",\r\n    address2: \"\"\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleButtonClick = () => {\r\n    const { fetchCoordsRequest, setIsOrderMade } = this.props;\r\n    const { address1, address2 } = this.state;\r\n\r\n    if (address1 && address2) fetchCoordsRequest({ address1, address2 });\r\n    setIsOrderMade(true);\r\n    this.setState({\r\n      ...this.state,\r\n      address1: \"\",\r\n      address2: \"\"\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { fetchAddressesRequest, MyAddresses } = this.props;\r\n\r\n    if (!MyAddresses || MyAddresses.length === 0) fetchAddressesRequest();\r\n  }\r\n\r\n  renderInputs = () => {\r\n    const { classes, MyAddresses } = this.props;\r\n    const { address1, address2 } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.alignCenter} ${classes.fieldAlign}`}\r\n        >\r\n          {\r\n            <TextField\r\n              id=\"address-1\"\r\n              name=\"address1\"\r\n              select\r\n              margin=\"normal\"\r\n              label=\"Departure way\"\r\n              value={this.state.address1}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">Departure way</MenuItem>\r\n              {MyAddresses.map(address =>\r\n                address2 === address ? null : (\r\n                  <MenuItem key={address} value={address}>\r\n                    {address}\r\n                  </MenuItem>\r\n                )\r\n              )}\r\n            </TextField>\r\n          }\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.alignCenter} ${classes.fieldAlign}`}\r\n        >\r\n          {\r\n            <TextField\r\n              id=\"address-2\"\r\n              name=\"address2\"\r\n              select\r\n              margin=\"normal\"\r\n              label=\"Destination\"\r\n              value={this.state.address2}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">Destination</MenuItem>\r\n              {MyAddresses.map(address =>\r\n                address1 === address ? null : (\r\n                  <MenuItem key={address} value={address}>\r\n                    {address}\r\n                  </MenuItem>\r\n                )\r\n              )}\r\n            </TextField>\r\n          }\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, isLoadingAddresses, errorText } = this.props;\r\n    const { address1, address2 } = this.state;\r\n\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.alignCenter} ${classes.fieldAlign}`}\r\n        >\r\n          <Typography variant=\"h4\">Order taxi</Typography>\r\n        </Grid>\r\n        {errorText && (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            className={`${classes.alignCenter} ${classes.fieldAlign}`}\r\n          >\r\n            <Typography variant=\"body1\">{errorText}</Typography>\r\n          </Grid>\r\n        )}\r\n\r\n        {isLoadingAddresses ? (\r\n          <Grid item xs={12} className={classes.loader}>\r\n            <CircularProgress />\r\n          </Grid>\r\n        ) : (\r\n          this.renderInputs()\r\n        )}\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            component=\"button\"\r\n            disabled={!address1 || !address2}\r\n            onClick={this.handleButtonClick}\r\n          >\r\n            Call a taxi\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingAddresses: getIsLoadingAddresses(state),\r\n  errorText: getLoadErrorText(state),\r\n  MyAddresses: getMyAddresses(state),\r\n  isLoadingCoords: getIsLoadingCoords(state)\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchAddressesRequest,\r\n  fetchCoordsRequest,\r\n  setIsOrderMade\r\n};\r\n\r\nconst WrappedOrderForm = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  withStyles(styles)\r\n)(OrderForm);\r\n\r\nexport default WrappedOrderForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = () => ({\r\n  fieldAlign: {\r\n    display: \"flex\"\r\n  },\r\n  alignLeft: {\r\n    justifyContent: \"flex-start\"\r\n  },\r\n  alignCenter: {\r\n    justifyContent: \"center\"\r\n  }\r\n});\r\n\r\nconst ProfileAlert = props => {\r\n  const { classes, header, body, btnText, linkTo } = props;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={`${classes.alignCenter} ${classes.fieldAlign}`}\r\n      >\r\n        <Typography variant=\"h4\">{header}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"body1\">{body}</Typography>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n      >\r\n        <Button component={Link} variant=\"outlined\" color=\"primary\" to={linkTo}>\r\n          {btnText}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ProfileAlert);\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { getCoordsError, setIsOrderMade } from \"modules/Coords\";\r\n\r\nconst styles = () => ({\r\n  fieldAlign: {\r\n    display: \"flex\"\r\n  },\r\n  alignLeft: {\r\n    justifyContent: \"flex-start\"\r\n  },\r\n  alignCenter: {\r\n    justifyContent: \"center\"\r\n  }\r\n});\r\n\r\nclass OrderAlert extends PureComponent {\r\n  handleClick = () => {\r\n    const { setIsOrderMade } = this.props;\r\n    setIsOrderMade(false);\r\n  };\r\n\r\n  render() {\r\n    const { classes, errorCoords } = this.props;\r\n\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.alignCenter} ${classes.fieldAlign}`}\r\n        >\r\n          <Typography variant=\"h4\">Order placed</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {errorCoords && (\r\n            <Typography variant=\"body1\">{errorCoords}</Typography>\r\n          )}\r\n          {!errorCoords && (\r\n            <Typography variant=\"body1\">\r\n              Your taxi is on its way to you. Will arrive in about 10 minutes\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            component=\"button\"\r\n            onClick={this.handleClick}\r\n          >\r\n            Make a new order\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errorCoords: getCoordsError(state)\r\n});\r\nconst mapDispatchToProps = { setIsOrderMade };\r\n\r\nconst WrappedOrderAlert = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  withStyles(styles)\r\n)(OrderAlert);\r\n\r\nexport default WrappedOrderAlert;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport OrderForm from \"components/OrderForm\";\r\nimport ProfileAlert from \"components/ProfileAlert\";\r\nimport OrderAlert from \"components/OrderAlert\";\r\nimport { getIsOrderMade } from \"modules/Coords\";\r\nimport { getIsProfileFilled } from \"modules/Auth\";\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\"\r\n  },\r\n  form: {\r\n    margin: 30,\r\n    maxWidth: 300,\r\n    position: \"absolute\",\r\n    zIndex: 200,\r\n    top: 70,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"stretch\",\r\n    padding: theme.spacing(3)\r\n  }\r\n});\r\n\r\nconst OrderPage = props => {\r\n  const { classes, isProfile, isOrderMade } = props;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      className={classes.container}\r\n      alignItems=\"center\"\r\n      justify=\"flex-start\"\r\n    >\r\n      <Grid item xs={12} md={8}>\r\n        <Paper className={classes.form}>\r\n          {isProfile && !isOrderMade && <OrderForm />}\r\n          {isProfile && isOrderMade && <OrderAlert />}\r\n          {!isProfile && (\r\n            <ProfileAlert\r\n              header=\"Fill in billing information\"\r\n              body=\"Enter your bank card information to place an order.\"\r\n              btnText=\"go to profile\"\r\n              linkTo=\"/profile\"\r\n            />\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isProfile: getIsProfileFilled(state),\r\n  isOrderMade: getIsOrderMade(state)\r\n});\r\nconst mapDispatchToProps = null;\r\n\r\nconst WrappedOrderPage = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  withStyles(styles)\r\n)(OrderPage);\r\n\r\nexport default WrappedOrderPage;\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport OrderPage from \"components/OrderPage\";\r\n\r\nimport styles from \"./MapBox.module.css\";\r\nimport { getCoords, getIsOrderMade } from \"modules/Coords\";\r\n\r\nclass MapBox extends PureComponent {\r\n  map = null;\r\n  mapContainer = React.createRef();\r\n\r\n  componentDidMount() {\r\n    mapboxgl.accessToken =\r\n      \"pk.eyJ1IjoidnZla3NsZXIiLCJhIjoiY2swNDIyY3k5MjBodzNjcHJwYXdiYnA1OSJ9.f_ikZnTIAUm1k_WEuudyCg\";\r\n    this.map = new mapboxgl.Map({\r\n      container: this.mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/streets-v9\",\r\n      center: [34.78, 32.07],\r\n      zoom: 15\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps !== this.props) {\r\n      const { isOrderMade, orderCoords } = this.props;\r\n\r\n      if (!isOrderMade && this.map.getLayer(\"route\")) {\r\n        this.map.removeLayer(\"route\");\r\n        this.map.removeSource(\"route\");\r\n      }\r\n\r\n      if (isOrderMade && orderCoords && orderCoords.length > 0) {\r\n        if (prevProps.orderCoords !== orderCoords) this.renderRoute();\r\n      }\r\n    }\r\n  }\r\n\r\n  renderRoute = () => {\r\n    const { orderCoords } = this.props;\r\n\r\n    this.map.addLayer({\r\n      id: \"route\",\r\n      type: \"line\",\r\n      source: {\r\n        type: \"geojson\",\r\n        data: {\r\n          type: \"Feature\",\r\n          properties: {\r\n            color: \"#F7455D\"\r\n          },\r\n          geometry: {\r\n            type: \"LineString\",\r\n            coordinates: orderCoords\r\n          }\r\n        }\r\n      },\r\n      paint: {\r\n        \"line-width\": 8,\r\n        \"line-color\": [\"get\", \"color\"]\r\n      }\r\n    });\r\n\r\n    this.map.flyTo({\r\n      center: orderCoords[0]\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.map.remove();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container} ref={this.mapContainer}>\r\n        <OrderPage />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  orderCoords: getCoords(state),\r\n  isOrderMade: getIsOrderMade(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(MapBox);\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { Field, reduxForm, change } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport ProfileAlert from \"components/ProfileAlert\";\r\nimport { renderTextField } from \"config/helpers\";\r\nimport {\r\n  handleProfileSubmit,\r\n  handleProfileClear,\r\n  getProfile\r\n} from \"modules/Auth\";\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(3)\r\n  },\r\n  formcolumn: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"stretch\"\r\n  },\r\n  fieldAlign: {\r\n    display: \"flex\"\r\n  },\r\n  alignLeft: {\r\n    justifyContent: \"flex-start\"\r\n  },\r\n  alignCenter: {\r\n    justifyContent: \"center\"\r\n  }\r\n});\r\n\r\nconst cardNameFormatter = value => {\r\n  if (!value) return \"\";\r\n  return value.replace(/[^A-Za-z\\s]/, \"\");\r\n};\r\n\r\nconst cardNumberFormatter = value => {\r\n  if (!value) return \"\";\r\n\r\n  const onlyNum = value.replace(/[^\\d\\s]/g, \"\");\r\n\r\n  const reg = /\\d{1,4}/g;\r\n  return (\r\n    onlyNum &&\r\n    onlyNum\r\n      .substring(0, 16)\r\n      .match(reg)\r\n      .join(\" \")\r\n  );\r\n};\r\n\r\nconst cardNumberParser = value => {\r\n  if (!value) return \"\";\r\n  return value.replace(/\\s/g, \"\");\r\n};\r\n\r\nconst expDateFormatter = value => {\r\n  if (!value || value === \"/\") return \"\";\r\n\r\n  const onlyNum = value.replace(/[^\\d\\s]/g, \"\");\r\n  if (onlyNum) {\r\n    let month = onlyNum.substring(0, 2);\r\n    let year = onlyNum.substring(2, 4);\r\n    if (+month > 12) month = \"12\";\r\n\r\n    return `${month}/${year}`;\r\n  } else return \"\";\r\n};\r\n\r\nconst cvvFormatter = value => {\r\n  if (!value) return \"\";\r\n\r\n  const onlyNum = value.replace(/[^\\d]/, \"\");\r\n  return onlyNum && onlyNum.substring(0, 3);\r\n};\r\n\r\nconst profileSyncValidator = values => {\r\n  const requiredFields = [\"cardName\", \"cardNumber\", \"expDate\", \"cvv\"];\r\n  const errors = {};\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) errors[field] = \"This is a required field\";\r\n  });\r\n  if (values[\"expDate\"]) {\r\n    let month = values[\"expDate\"].substring(0, 2);\r\n    let year = values[\"expDate\"].substring(2);\r\n    const date = new Date(+(\"20\" + year), +month - 1);\r\n    if (+date < Date.now()) errors[\"expDate\"] = \"Invalid date\";\r\n  }\r\n  if (!/^\\S+\\s\\S+$/gi.test(values[\"cardName\"]))\r\n    errors[\"cardName\"] = \"Enter the name as on the card\";\r\n  if (values[\"cardNumber\"] && values[\"cardNumber\"].length < 16)\r\n    errors[\"cardNumber\"] = \"Card number must be 16 digits\";\r\n  if (!/^\\d{3}$/gi.test(values[\"cvv\"])) errors[\"cvv\"] = \"CVV must be 3 digits\";\r\n  return errors;\r\n};\r\n\r\nclass ProfileForm extends PureComponent {\r\n  state = {\r\n    isUpdated: false\r\n  };\r\n\r\n  requiredFields = [\"cardName\", \"cardNumber\", \"expDate\", \"cvv\"];\r\n\r\n  handleSubmit = values => {\r\n    const { handleProfileSubmit } = this.props;\r\n    this.setState({\r\n      ...this.state,\r\n      isUpdated: true\r\n    });\r\n    handleProfileSubmit({ ...values });\r\n  };\r\n\r\n  handleClear = () => {\r\n    const { handleProfileClear, change } = this.props;\r\n    this.setState({\r\n      isUpdated: false\r\n    });\r\n    this.requiredFields.forEach(field => change(field, \"\"));\r\n    handleProfileClear();\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { classes, handleSubmit } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Paper component=\"form\" onSubmit={handleSubmit(this.handleSubmit)}>\r\n          <Grid container spacing={2} className={classes.form}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={`${classes.alignCenter} ${classes.fieldAlign}`}\r\n              >\r\n                Profile\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h6\"\r\n                className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n              >\r\n                Payment method\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Field\r\n                name=\"cardName\"\r\n                component={renderTextField}\r\n                label=\"Owner`s name\"\r\n                type=\"text\"\r\n                required\r\n                fullWidth\r\n                format={cardNameFormatter}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Field\r\n                name=\"cardNumber\"\r\n                component={renderTextField}\r\n                label=\"Card number\"\r\n                required\r\n                fullWidth\r\n                format={cardNumberFormatter}\r\n                parse={cardNumberParser}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Field\r\n                name=\"expDate\"\r\n                component={renderTextField}\r\n                label=\"Expiration date\"\r\n                required\r\n                fullWidth\r\n                placeholder=\"__ /__\"\r\n                InputLabelProps={{ shrink: true }}\r\n                format={expDateFormatter}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Field\r\n                name=\"cvv\"\r\n                component={renderTextField}\r\n                label=\"CVV\"\r\n                required\r\n                fullWidth\r\n                format={cvvFormatter}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                component=\"button\"\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                component=\"button\"\r\n                onClick={this.handleClear}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  renderAlert = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Paper className={classes.form}>\r\n          <ProfileAlert\r\n            header=\"Profile\"\r\n            body=\"Billing information updated. Now you can order a taxi.\"\r\n            btnText=\"Go to map\"\r\n            linkTo=\"/map\"\r\n          />\r\n        </Paper>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { isUpdated } = this.state;\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        className={classes.container}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <Grid item xs={10} md={6}>\r\n          {isUpdated ? this.renderAlert() : this.renderForm()}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  initialValues: getProfile(state)\r\n});\r\nconst mapDispatchToProps = {\r\n  handleProfileSubmit,\r\n  handleProfileClear,\r\n  change\r\n};\r\n\r\nconst WrappedProfileForm = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  withStyles(styles),\r\n  reduxForm({ form: \"profileform\", validate: profileSyncValidator })\r\n)(ProfileForm);\r\n\r\nexport default WrappedProfileForm;\r\n","import React, { PureComponent } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Header from \"components/Header\";\r\nimport PrivateRoute from \"components/PrivateRoute\";\r\nimport LoginForm from \"components/LoginForm\";\r\nimport MapBox from \"components/MapBox\";\r\nimport ProfileForm from \"components/ProfileForm\";\r\n\r\nclass RootRouter extends PureComponent {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/login\" component={LoginForm} />\r\n          <Redirect path=\"/\" exact to=\"login\" />\r\n          <PrivateRoute path=\"/map\" component={MapBox} />\r\n          <PrivateRoute path=\"/profile\" component={ProfileForm} />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"normalize.css\";\r\nimport \"./index.css\";\r\n\r\nimport createStore from \"./store\";\r\nimport RootRouter from \"components/RootRouter\";\r\n\r\nconst store = createStore();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <RootRouter />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}